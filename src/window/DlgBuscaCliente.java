package window;

import control.GerInterGrafica;
import domain.Cliente;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class DlgBuscaCliente extends javax.swing.JDialog {

    private GerInterGrafica gerIG;
    private Cliente cliSelecionado;

    public DlgBuscaCliente(java.awt.Frame parent, boolean modal, GerInterGrafica gerIG) {
        super(parent, modal);
        initComponents();
        this.gerIG = gerIG;
        cliSelecionado = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mnuPopUpTabela = new javax.swing.JPopupMenu();
        Selecionar = new javax.swing.JMenuItem();
        birthdayEvaluator1 = new com.toedter.calendar.demo.BirthdayEvaluator();
        dateChooserPanelBeanInfo1 = new com.toedter.calendar.demo.DateChooserPanelBeanInfo();
        dateUtil1 = new com.toedter.calendar.DateUtil();
        jCalendarBeanInfo1 = new com.toedter.calendar.JCalendarBeanInfo();
        jCalendarDemo1 = new com.toedter.calendar.demo.JCalendarDemo();
        jCalendarTheme1 = new com.toedter.plaf.JCalendarTheme();
        jDateChooserBeanInfo1 = new com.toedter.calendar.JDateChooserBeanInfo();
        jDayChooserBeanInfo1 = new com.toedter.calendar.JDayChooserBeanInfo();
        jLocaleChooserBeanInfo1 = new com.toedter.components.JLocaleChooserBeanInfo();
        jMonthChooserBeanInfo1 = new com.toedter.calendar.JMonthChooserBeanInfo();
        jCalendarDemo2 = new com.toedter.calendar.demo.JCalendarDemo();
        jPanel1 = new javax.swing.JPanel();
        txtInformacao = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCliente = new javax.swing.JTable();
        btnConfirma = new javax.swing.JToggleButton();
        btnBuscarCliente = new javax.swing.JButton();
        cmbTipo = new javax.swing.JComboBox<>();
        btnCadastroCliente = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        jLabel2.setText("jLabel2");

        Selecionar.setText("Selecionar");
        Selecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelecionarActionPerformed(evt);
            }
        });
        mnuPopUpTabela.add(Selecionar);

        javax.swing.GroupLayout jCalendarDemo1Layout = new javax.swing.GroupLayout(jCalendarDemo1.getContentPane());
        jCalendarDemo1.getContentPane().setLayout(jCalendarDemo1Layout);
        jCalendarDemo1Layout.setHorizontalGroup(
            jCalendarDemo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jCalendarDemo1Layout.setVerticalGroup(
            jCalendarDemo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jCalendarDemo2Layout = new javax.swing.GroupLayout(jCalendarDemo2.getContentPane());
        jCalendarDemo2.getContentPane().setLayout(jCalendarDemo2Layout);
        jCalendarDemo2Layout.setHorizontalGroup(
            jCalendarDemo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jCalendarDemo2Layout.setVerticalGroup(
            jCalendarDemo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Busca Cliente");
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "CPF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCliente);

        btnConfirma.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnConfirma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/windows/imagens/accept.png"))); // NOI18N
        btnConfirma.setText(" Confirmar");
        btnConfirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(133, Short.MAX_VALUE)
                .addComponent(btnConfirma)
                .addGap(163, 163, 163))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnConfirma)
                .addContainerGap())
        );

        btnBuscarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/windows/imagens/search.png"))); // NOI18N
        btnBuscarCliente.setText("Buscar Cliente");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome", "CPF", "ID" }));
        cmbTipo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        btnCadastroCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/windows/imagens/add.png"))); // NOI18N
        btnCadastroCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastroClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCadastroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtInformacao, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(btnBuscarCliente)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCadastroCliente)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtInformacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscarCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public Cliente getCliSelecionado() {
        return cliSelecionado;
    }

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        carregarClientes();
    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void SelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelecionarActionPerformed

    }//GEN-LAST:event_SelecionarActionPerformed

    private void btnConfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmaActionPerformed

        int linha = tblCliente.getSelectedRow();
        if (linha >= 0) {
            cliSelecionado = (Cliente) tblCliente.getValueAt(linha, 1);
            ((DefaultTableModel) tblCliente.getModel()).setRowCount(0);
            setVisible(false);

        } else {
            JOptionPane.showMessageDialog(this, "Selecione um CLIENTE.");
        }


    }//GEN-LAST:event_btnConfirmaActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        ((DefaultTableModel) tblCliente.getModel()).setRowCount(0);
        txtInformacao.setText("");
        carregarClientes();
    }//GEN-LAST:event_formComponentShown

    private void btnCadastroClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastroClienteActionPerformed
        gerIG.abrirJanCadCliente();
    }//GEN-LAST:event_btnCadastroClienteActionPerformed

    public boolean validarDados() throws Exception {
        String msgErro = "";
        cmbTipo.setForeground(Color.black);

        if (txtInformacao.getText().isEmpty()) {
            msgErro = msgErro + "Campo de Preenchimento Vazio\n";
            cmbTipo.setForeground(Color.red);
            JOptionPane.showMessageDialog(this, msgErro + "Favor Completar o campo!", "Buscar Cliente", JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            return true;
        }
    }
    
    public void carregarClientes(){
        int tipo = (int) cmbTipo.getSelectedIndex();
        String informacao = txtInformacao.getText();
        try {

            List<Cliente> listaCliente = gerIG.getGerDom().carregarClientes(tipo, informacao);
            //listaCliente = listaClienteSelecionada(listaCliente);
            //atualizarTabelaCliente(listaCliente);

            //resetar tabela
            ((DefaultTableModel) tblCliente.getModel()).setRowCount(0);

            if (listaCliente.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Não existem registros com essa pesquisa.");
            } else {
                for (Cliente cli : listaCliente) {
                    ((DefaultTableModel) tblCliente.getModel()).addRow(cli.toArray());
                }
            }

        } catch (Exception ex) {
            Logger.getLogger(DlgBuscaCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void atualizarTabelaCliente(List<Cliente> listaCliente) {
        int qt_linhas = tblCliente.getModel().getRowCount();
        int qt_Itens = listaCliente.size();
        int linha, col, i;

        for (i = 0; i < qt_linhas; i++) {
            ((DefaultTableModel) tblCliente.getModel()).removeRow(i);
        }

        for (i = 0; i < listaCliente.size(); i++) {
            col = 0;
            linha = i;
            ((DefaultTableModel) tblCliente.getModel()).addRow(new Object[1]);
            tblCliente.setValueAt(listaCliente.get(i).getIdCliente(), linha, col++);
            tblCliente.setValueAt(listaCliente.get(i).getNome(), linha, col++);
            tblCliente.setValueAt(listaCliente.get(i).getCpf(), linha, col++);
        }
    }

    public List<Cliente> listaClienteSelecionada(List<Cliente> listaCliente) {
        List<Cliente> listaClienteNova = new ArrayList<>();

        String campoPreenchido = txtInformacao.getText();
        String escolhaCmb = cmbTipo.getSelectedItem().toString();
        int i;
        int indexList = 0;
        boolean teste;
        if (escolhaCmb == "Nome") {
            for (i = 0; i < listaCliente.size(); i++) {
                if (listaCliente.get(i).getNome().equals(campoPreenchido)) {
                    listaClienteNova.add(listaCliente.get(i));
                }
            }
        } else if (escolhaCmb == "CPF") {
            for (i = 0; i < listaCliente.size(); i++) {
                if (listaCliente.get(i).getCpf().equals(campoPreenchido)) {
                    listaClienteNova.add(listaCliente.get(i));
                }
            }
        } else {
            for (i = 0; i < listaCliente.size(); i++) {
                if (listaCliente.get(i).getIdCliente() == Integer.parseInt(campoPreenchido)) {
                    listaClienteNova.add(listaCliente.get(i));
                }
            }
        }

        return listaClienteNova;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Selecionar;
    private com.toedter.calendar.demo.BirthdayEvaluator birthdayEvaluator1;
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnCadastroCliente;
    private javax.swing.JToggleButton btnConfirma;
    private javax.swing.JComboBox<String> cmbTipo;
    private com.toedter.calendar.demo.DateChooserPanelBeanInfo dateChooserPanelBeanInfo1;
    private com.toedter.calendar.DateUtil dateUtil1;
    private com.toedter.calendar.JCalendarBeanInfo jCalendarBeanInfo1;
    private com.toedter.calendar.demo.JCalendarDemo jCalendarDemo1;
    private com.toedter.calendar.demo.JCalendarDemo jCalendarDemo2;
    private com.toedter.plaf.JCalendarTheme jCalendarTheme1;
    private com.toedter.calendar.JDateChooserBeanInfo jDateChooserBeanInfo1;
    private com.toedter.calendar.JDayChooserBeanInfo jDayChooserBeanInfo1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private com.toedter.components.JLocaleChooserBeanInfo jLocaleChooserBeanInfo1;
    private com.toedter.calendar.JMonthChooserBeanInfo jMonthChooserBeanInfo1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu mnuPopUpTabela;
    private javax.swing.JTable tblCliente;
    private javax.swing.JTextField txtInformacao;
    // End of variables declaration//GEN-END:variables

}
